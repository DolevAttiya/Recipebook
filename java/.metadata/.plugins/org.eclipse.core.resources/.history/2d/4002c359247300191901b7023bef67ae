package rep;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import javax.swing.ImageIcon;
public class Recipe {
 private int recipeId;
 private String  recipeName;
 private ArrayList<Allergies> recipealergie;
 private ArrayList<Ingridiant> recipeIngridiants;
 private ArrayList<Integer> recipeIngridiantsType;
 private ArrayList<Integer> recipeIngridiantsAmount;
 private int recipealergieCalories;
 private int recipeCarbohydrate;
 private int recipeProtein;
 private int recipeFat;
 private int recipeKosher;
 private ImageIcon recipeImage;
 private TimeUnit recipeTimeToMake;
 private int recipeComplex;
 private int recipeUserID;
 private int recipeStars;
 private String recipeDescription;
 private String recipeProcses;
 /*Contractor*/
public Recipe( int recipeId,String  recipeName, ArrayList<Allergies> recipealergie,int recipealergieCalories,int recipeCarbohydrate,int recipeProtein,int recipeFat, int recipeKosher, ImageIcon recipeImage, TimeUnit recipeTimeToMakeprivate ,int recipeComplex,int recipeUserID,int recipeStars, String recipeDescription, String recipeProcses ,ArrayList<Ingridiant> recipeIngridiants, ArrayList<Integer> recipeIngridiantsType, ArrayList<Integer> recipeIngridiantsAmount)
{
	this.recipeId=recipeId;
	this.recipeName=recipeName;
	recipealergie.forEach((n) -> this.recipealergie.add(n));
	recipeIngridiants.forEach((n) -> this.recipeIngridiants.add(n));
	recipeIngridiantsType.forEach((n) -> this.recipeIngridiantsType.add(n));
	recipeIngridiantsAmount.forEach((n) -> this.recipeIngridiantsAmount.add(n));
	this.recipealergieCalories=recipealergieCalories;
	this.recipeCarbohydrate=recipeCarbohydrate;
	this.recipeProtein=recipeProtein;
	this.recipeFat=recipeFat;
	this.recipeKosher=recipeKosher;
	this.setRecipeComplex(recipeComplex);
	this.setRecipeUserID(recipeUserID);
	this.setRecipeStars(recipeStars);
	this.setRecipeDescription(recipeDescription);
	this.setRecipeProcses(recipeProcses);	
	this.recipeImage=recipeImage;
}
public int getRecipeId() {
	return recipeId;
}
public void setRecipeId(int recipeId) {
	this.recipeId = recipeId;
}
public String getRecipeName() {
	return recipeName;
}
public void setRecipeName(String recipeName) {
	this.recipeName = recipeName;
}
public ArrayList<Allergies> getRecipealergie() {
	return recipealergie;
}
public void setRecipealergie(ArrayList<Allergies> recipealergie) {
	this.recipealergie = recipealergie;
}
public ArrayList<Ingridiant> getRecipeIngridiants() {
	return recipeIngridiants;
}
public void setRecipeIngridiants(ArrayList<Ingridiant> recipeIngridiants) {
	this.recipeIngridiants = recipeIngridiants;
}
public ArrayList<Integer> getRecipeIngridiantsType() {
	return recipeIngridiantsType;
}
public void setRecipeIngridiantsType(ArrayList<Integer> recipeIngridiantsType) {
	this.recipeIngridiantsType = recipeIngridiantsType;
}
public ArrayList<Integer> getRecipeIngridiantsAmount() {
	return recipeIngridiantsAmount;
}
public void setRecipeIngridiantsAmount(ArrayList<Integer> recipeIngridiantsAmount) {
	this.recipeIngridiantsAmount = recipeIngridiantsAmount;
}
public int getRecipealergieCalories() {
	return recipealergieCalories;
}
public void setRecipealergieCalories(int recipealergieCalories) {
	this.recipealergieCalories = recipealergieCalories;
}
public int getRecipeCarbohydrate() {
	return recipeCarbohydrate;
}
public void setRecipeCarbohydrate(int recipeCarbohydrate) {
	this.recipeCarbohydrate = recipeCarbohydrate;
}
public int getRecipeProtein() {
	return recipeProtein;
}
public void setRecipeProtein(int recipeProtein) {
	this.recipeProtein = recipeProtein;
}
public int getRecipeKosher() {
	return recipeKosher;
}
public void setRecipeKosher(int recipeKosher) {
	this.recipeKosher = recipeKosher;
}
public int getRecipeFat() {
	return recipeFat;
}
public void setRecipeFat(int recipeFat) {
	this.recipeFat = recipeFat;
}
public ImageIcon getRecipeImage() {
	return recipeImage;
}
public void setRecipeImage(ImageIcon recipeImage) {
	this.recipeImage = recipeImage;
}
public TimeUnit getRecipeTimeToMake() {
	return recipeTimeToMake;
}
public void setRecipeTimeToMake(TimeUnit recipeTimeToMake) {
	this.recipeTimeToMake = recipeTimeToMake;
}
public int getRecipeComplex() {
	return recipeComplex;
}
public void setRecipeComplex(int recipeComplex) {
	this.recipeComplex = recipeComplex;
}
public int getRecipeUserID() {
	return recipeUserID;
}
public void setRecipeUserID(int recipeUserID) {
	this.recipeUserID = recipeUserID;
}
public int getRecipeStars() {
	return recipeStars;
}
public void setRecipeStars(int recipeStars) {
	this.recipeStars = recipeStars;
}
public String getRecipeDescription() {
	return recipeDescription;
}
public void setRecipeDescription(String recipeDescription) {
	this.recipeDescription = recipeDescription;
}
public String getRecipeProcses() {
	return recipeProcses;
}
public void setRecipeProcses(String recipeProcses) {
	this.recipeProcses = recipeProcses;
}
public void addIngridiant(int IngridiantId,int IngridiantType, int IngridiantAmount)/*Kosher levels: 0 parve, 1 milk,2 meat, 3 pig*/
{
	/*Ingridiant newIngridiant= new Ingridiant(...);
	 this.recipeIngridiants.add(newIngridiant);
	 this.recipeIngridiantsType.add(IngridiantType);
	 this.recipeIngridiantsAmount.add(IngridiantAmount);
	 this.recipealergieCalories+=newIngridiant.getIngridiantalergieCalories();
	 this.recipeCarbohydrate+=newIngridiant.getIngridiantCarbohydrate();
	 this.recipeFat+=newIngridiant.getIngridiantFat();
	 if(newIngridiant.getIngridiantKosher()!=0)
	 if(this.getRecipeKosher()!=3&&newIngridiant.getIngridiantKosher()!=3)
		 if(this.getRecipeKosher()==0) {this.setRecipeKosher(newIngridiant.getIngridiantKosher());}
		 else if (this.getRecipeKosher()!=newIngridiant.getIngridiantKosher())
			 this.setRecipeKosher(3);*/

	 
 
		 
		 
		 
	 

}
 
}
